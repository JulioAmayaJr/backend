name: Sync Developer to Main
on:
  schedule:
    - cron: '*/30 * * * *'  # Se ejecuta cada 30 minutos
  workflow_dispatch:  # Permite ejecutar el workflow manualmente

jobs:
  sync-branches:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}
      
      - name: Configurar Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      
      - name: Fetch del repositorio remoto
        run: |
          git remote add upstream https://github.com/ghost1999dev/backend-auction.git
          git fetch upstream
      
      - name: Intentar merge automático
        id: merge_attempt
        run: |
          git checkout main
          # Primero intentamos un merge normal
          if git merge upstream/developer --allow-unrelated-histories --no-ff -m "Auto-merge de la rama developer remota a main"; then
            echo "merge_status=success" >> $GITHUB_OUTPUT
          else
            echo "merge_status=conflict" >> $GITHUB_OUTPUT
            # Abortar el merge fallido para limpiar el estado
            git merge --abort
          fi
      
      - name: Estrategia alternativa - Copiar archivos nuevos
        if: steps.merge_attempt.outputs.merge_status == 'conflict'
        run: |
          # Checkout a una rama temporal basada en upstream/developer
          git checkout -b temp_branch upstream/developer
          
          # Crear directorio para guardar los archivos
          mkdir -p /tmp/upstream_files
          
          # Copiar todos los archivos excepto .git
          rsync -av --exclude='.git' ./ /tmp/upstream_files/
          
          # Volver a nuestra rama main
          git checkout main
          
          # Copiar los archivos de upstream/developer a main
          rsync -av --exclude='.git' /tmp/upstream_files/ ./
          
          # Añadir todos los cambios
          git add .
          
          # Commit con mensaje informativo
          git commit -m "Sync: Copiando archivos de upstream/developer a main manualmente"
          
          echo "Nota: Se realizó una copia manual de archivos debido a conflictos de merge."
      
      - name: Push de los cambios
        run: |
          # Usar el PAT explícitamente en el URL para asegurar permisos
          remote_url="https://${{ secrets.PAT }}@github.com/JulioAmayaJr/backend.git"
          git remote set-url origin "$remote_url"
          git push origin main